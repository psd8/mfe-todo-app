version: "3.8"
services:
  dragndrop:
    build:
      context: ./frontend/components/dnd
      dockerfile: Dockerfile
      target: development
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true # create-ui-app >= 5.x
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT= 8083
    volumes:
      - /dnd/node_modules
      - ./frontend/components/dnd:/dnd
    ports:
      - "8083:8083"
    container_name: dragndrop
  product-listing:
    build:
      context: ./frontend/product-listing
      dockerfile: Dockerfile
      target: development
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true # create-ui-app >= 5.x
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT= 8082
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    volumes:
      - /product-listing/node_modules
      - ./frontend/product-listing:/product-listing
    ports:
      - "8082:8082"
    container_name: product-listing
    depends_on:
      - dragndrop
      - api
      - autosave

  autosave:
    build:
      context: ./frontend/components/auto-save
      dockerfile: Dockerfile
      target: development
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true # create-ui-app >= 5.x
      - FAST_REFRESH=false
      - WDS_SOCKET_PORT= 8084
    volumes:
      - /dnd/node_modules
      - ./frontend/components/dnd:/autosave
    ports:
      - "8084:8084"
    container_name: autosave

  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - dem

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5000:80"
    depends_on:
      - postgres
    networks:
      - dem

  api:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/apps_python
    depends_on:
      - postgres
    ports:
      - "9999:80"
    env_file:
      - ./backend/.env
    networks:
      - dem

networks:
  dem:

volumes:
  pgdata:
