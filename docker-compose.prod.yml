version: "1.0"
services:
  dragndrop-prod:
    build:
      context: ./frontend/components/dnd
      dockerfile: Dockerfile.prod
    ports:
      - "8083:80"
    container_name: dragndrop-prod
  product-listing-prod:
    restart: unless-stopped
    build:
      context: ./frontend/product-listing
      dockerfile: Dockerfile.prod
    env_file:
      - ./frontend/product-listing/.env
    ports:
      - "8082:80"
    container_name: product-listing-prod
    depends_on:
      - dragndrop-prod
      - autosave-prod
  autosave-prod:
    build:
      context: ./frontend/components/auto-save
      dockerfile: Dockerfile.prod
    ports:
      - "8084:80"
    container_name: autosave-prod
  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    networks:
      - dem

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5000:80"
    depends_on:
      - postgres
    networks:
      - dem

  api:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/apps_python
    depends_on:
      - postgres
    ports:
      - "9999:80"
    env_file:
      - ./backend/.env
    networks:
      - dem

networks:
  dem:

volumes:
  pgdata:
